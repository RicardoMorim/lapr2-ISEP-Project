@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Fleet Manager (FM)" as FM
participant ":RegisterVehicleUI" as UI
participant ":RegisterVehicleController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "vehicleTypeRepository:\nVehicleTypeRepository" as VehicleTypeRepository
participant "vehicleBrandRepository:\nVehicleBrandRepository" as VehicleBrandRepository
participant "vehicleModelRepository:\nVehicleModelRepository" as VehicleModelRepository
participant "company\n:Company" as company

activate FM

        FM -> UI : requests to register a vehicle

        activate UI

'            UI --> ADM : requests data (reference, description,  informal \n description, technical description, duration, cost)
            'create CTRL
            UI -> CTRL** : create

            UI -> CTRL : getVehicleTypes()
            activate CTRL

                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getVehicleTypeRepository()
                activate PLAT

                    PLAT --> CTRL: VehicleTypesRepository
                deactivate PLAT

                CTRL -> VehicleTypeRepository : getVehicleTypes()
                activate VehicleTypeRepository

                    VehicleTypeRepository --> CTRL : vehicleTypeList
                deactivate VehicleTypeRepository

                CTRL --> UI : vehicleTypeList
            deactivate CTRL

            UI --> FM : shows vehicle types list\n and asks to select one
        deactivate UI


alt The FM chooses a vehicle type from the list
    FM -> UI : selects a vehicle type
    activate UI
else The FM wants to add a new vehicle type
    FM -> UI : types a vehicle type not in the list
end


    activate UI

    UI -> CTRL : getVehicleBrands()
                activate CTRL

                    CTRL -> RepositorySingleton : getInstance()
                    activate RepositorySingleton

                        RepositorySingleton --> CTRL: repositories
                    deactivate RepositorySingleton

                    CTRL -> PLAT : getVehicleBrandRepository()
                    activate PLAT

                        PLAT --> CTRL: VehicleBrandRepository
                    deactivate PLAT

                    CTRL -> VehicleBrandRepository : getVehicleBrands()
                    activate VehicleBrandRepository

                        VehicleBrandRepository --> CTRL : vehicleBrandList
                    deactivate VehicleBrandRepository

                    CTRL --> UI : vehicleBrandList
                deactivate CTRL

                UI --> FM : shows vehicle brands list\n and asks to select one
            deactivate UI

       alt The FM chooses a vehicle brand from the list
           FM -> UI : selects a vehicle brand
           activate UI
       else The FM wants to add a new vehicle brand
           FM -> UI : types a vehicle brand not in the list
       end

    activate UI

       UI -> CTRL : getVehicleModels()
                   activate CTRL

                       CTRL -> RepositorySingleton : getInstance()
                       activate RepositorySingleton

                           RepositorySingleton --> CTRL: repositories
                       deactivate RepositorySingleton

                       CTRL -> PLAT : getVehicleModelRepository()
                       activate PLAT

                           PLAT --> CTRL: VehicleModelRepository
                       deactivate PLAT

                       CTRL -> VehicleModelRepository : getVehicleModels()
                       activate VehicleModelRepository

                           VehicleModelRepository --> CTRL : vehicleModelList
                       deactivate VehicleModelRepository

                       CTRL --> UI : vehicleModelList
                   deactivate CTRL

                   UI --> FM : shows vehicle models list\n and asks to select one
               deactivate UI

           alt The FM chooses a vehicle model from the list
               FM -> UI : selects a vehicle model
               activate UI
           else The FM wants to add a new vehicle model
               FM -> UI : types a vehicle model not in the list
           end

    activate UI
        UI --> FM : requests data (tare, gross weight, current Km, register date, \nacquisition date, maintenance/check up frequency, vehicle plate)
    deactivate UI

    FM -> UI : types requested data (tare, gross weight, current Km, register date, \nacquisition date, maintenance/check up frequency, vehicle plate)
    activate UI

        UI --> FM : shows selected and requested data
    deactivate UI

    FM -> UI : submits data
    activate UI

        UI -> CTRL : saveVehicle()
        activate CTRL
        CTRL -> company : saveVehicle(Vehicle)
        activate company
        company -> company : validateVehicle(Vehicle)
        company -> company : saveVehicle(Vehicle)

        CTRL -> UI : result
        deactivate CTRL
            UI --> FM: displays operation success
        deactivate company
    deactivate UI

deactivate FM

@enduml