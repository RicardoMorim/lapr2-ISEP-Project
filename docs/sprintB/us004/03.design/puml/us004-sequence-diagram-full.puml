@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Organization Employee" as ADM
participant ":AddSkillUI" as UI
participant ":SkillController" as SkillCTRL
participant ":CollaboratorController" as CollaboratorCTRL
participant "SkillRepository:\nSkillRepository" as SkillRepository
participant "CollaboratorRepository:\nCollaboratorRepository" as CollaboratorRepository


participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT

activate ADM
    ADM -> UI : asks to add one or more Skills to a collaborator
    activate UI
    UI -> CollaboratorCTRL** : create
       UI -> CollaboratorCTRL: getCollaboratorList()
       activate CollaboratorCTRL
                       CollaboratorCTRL -> RepositorySingleton : getInstance()
                       activate RepositorySingleton

                           RepositorySingleton --> CollaboratorCTRL: repositories
                       deactivate RepositorySingleton

                       CollaboratorCTRL -> PLAT : getCollaboratorRepository()
                       activate PLAT

                           PLAT --> CollaboratorCTRL: CollaboratorRepository
                       deactivate PLAT



                       CollaboratorCTRL -> CollaboratorRepository : getCollaboratorList()
                       activate CollaboratorRepository

                    CollaboratorRepository -> CollaboratorCTRL: returns collaboratorList
                deactivate CollaboratorRepository
           CollaboratorCTRL -> UI: returns collaboratorList
       deactivate CollaboratorCTRL
       UI -> ADM: shows the collaborator list and asks to choose one
    deactivate UI
    ADM -> UI : chooses the collaborator

    activate UI
        UI -> SkillCTRL** : create
        UI -> SkillCTRL : getSkills()
        activate SkillCTRL
            SkillCTRL -> PLAT : getSkillRepository()
            activate PLAT
            PLAT --> SkillCTRL: SkillRepository
            deactivate PLAT
            SkillCTRL -> SkillRepository: getSkillsThatTheCollaboratorDoesNotHave(collaborator)
            activate SkillRepository
                SkillRepository -> SkillCTRL: returns skills
            deactivate SkillRepository

            SkillCTRL -> UI: returns skills
            deactivate SkillCTRL

        UI -> ADM: shows the skills that the collaborator doesn't \nhave and asks to choose the ones he wants to add
    deactivate UI
    ADM -> UI: chooses the skills that he wants to add

    activate UI
        UI -> CollaboratorCTRL: addSkills(collaborator, skills)
        activate CollaboratorCTRL
        loop for each skill in skills
            CollaboratorCTRL -> Collaborator** : addSkill(skill)
        end
        CollaboratorCTRL -> UI: returns success
    deactivate CollaboratorCTRL
    UI -> ADM: shows the updated collaborator information
    deactivate UI
deactivate ADM

@enduml