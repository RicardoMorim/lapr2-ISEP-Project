@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto
skinparam classAttributeIconSize 0
'left to right direction


PostponeEntryController --> Agenda
PostponeEntryController ..> Repositories : repositories
PostponeEntryController --> Entry
Entry --> Team
PostponeEntryUI ..> PostponeEntryController
Repositories --> "1" Agenda
Repositories --> "1" TeamRepository
Repositories <-- Repositories : instance
PostponeEntryUI_fx ..> PostponeEntryController
Agenda --> Entry

  class PostponeEntryController {
        -Agenda agenda
        +PostponeEntryController()
        -void getAgenda()
        +Entry displayAndSelectEntry()
    }


    class Entry {
        -String entryTitle
        -Calendar date
        -Team team
        +Entry(String state, String description, String urgency, String entryTitle, int duration, Calendar date, List<Vehicle> vehicles, Team team, GreenSpace greenSpace)
        +Entry(String state, String description, String urgency, String entryTitle, int duration, Calendar date, GreenSpace greenSpace)
        +void setTeam(Team team)
        +String getEntryTitle()
        +String getDateToString()
        +Team getTeam()
        +void setDate(Calendar date)
        +Calendar getDate()
        +Calendar validateDate()
        +Calendar validatePostponeDate()
        +String toString()
    }

    class Team {
        +List<Collaborator> getTeamMembers()
    }


    class Agenda {
        -static final List<Entry> agenda
        +void addEntry(Entry entry)
        +static void printEntryAt(int nList)
        +static List<Entry> getAgenda()
        +static Entry getEntryAt(int nList)
        +static int getSize()
    }

    class PostponeEntryUI {
        -PostponeEntryController controller
        -Entry entry
        -Calendar newDate
        +PostponeEntryUI()
        +void run()
        -PostponeEntryController getController()
        -void requestData()
        -void submitData()
        -void confirmsData()
    }

    class PostponeEntryUI_fx {
        -ListView<String> entriesListView
        -List<Entry> entries
        -List<String> hours
        -Button button
        -Label operationStatusLabel
        -DatePicker postponeDatePicker
        -ChoiceBox hourChoiceBox
        +void initialize(URL url, ResourceBundle resourceBundle)
        -void populateEntriesListView()
        -void populateHoursListView()
        -void postponingEntry()
        -Calendar localDateToCalendar(LocalDate selectedDate)
    }

class Repositories{
    +getInstance()
    + getAgenda(): Agenda
    + getTeamRepository(): TeamRepository
    }
@enduml