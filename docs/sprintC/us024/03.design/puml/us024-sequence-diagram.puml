@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title System Sequence Diagram (SSD)

autonumber

actor "GSM" as Employee
participant ":PostponeAgendaEntryUI" as UI
participant ":PostponeAgendaEntryController" as CTRL
participant ":Repositories" as RepositorySingleton
participant "AgendaEntryRepository\n:agendaEntryRepository" as AgendaRepo
participant "AgendaEntryMapper"
participant "AgendaEntryDTO"
activate Employee

    Employee -> UI : asks to postpone an entry in the Agenda
    activate UI

        UI -> CTRL : getAgendaEntries()
        activate CTRL

            CTRL -> RepositorySingleton : getInstance()
            activate RepositorySingleton

                RepositorySingleton --> CTRL: repositories
            deactivate RepositorySingleton

            CTRL -> AgendaRepo : getAgendaEntries()
            activate AgendaRepo

                AgendaRepo --> CTRL : agendaEntryList
            deactivate AgendaRepo

            CTRL -> "AgendaEntryMapper" : getAgendaEntriesDTOs()
            activate "AgendaEntryMapper"

            loop for each agendaEntry in agendaEntryList
                "AgendaEntryMapper" -> "AgendaEntryDTO" : agendaEntryDTO = toDTO(agendaEntry)
                activate "AgendaEntryDTO"

                deactivate "AgendaEntryDTO"
            end

            "AgendaEntryMapper" --> CTRL : agendaEntryDTOList
            deactivate "AgendaEntryMapper"

            CTRL --> UI : agendaEntryDTOList
        deactivate CTRL

        UI --> Employee : shows the list of entries in the Agenda\nand planned dates and asks to select one
    deactivate UI

    Employee -> UI : selects an entry
    activate UI

        UI --> Employee : asks to select a new date
    deactivate UI

    Employee -> UI : selects new date for the entry
    activate UI

        UI -> "AgendaEntryDTO" : agendaEntryDTO.date = newDate
        activate "AgendaEntryDTO"
        deactivate "AgendaEntryDTO"

        UI -> CTRL : updateAgendaEntryDate(agendaEntryDTO)
        activate CTRL

            CTRL -> "AgendaEntryMapper" : updateAgendaEntry(agendaEntryDTO)
            activate "AgendaEntryMapper"

                "AgendaEntryMapper" -> "AgendaEntryMapper" : agendaEntry = toEntity(agendaEntryDTO)
                activate "AgendaEntryMapper"
                deactivate
            "AgendaEntryMapper" --> CTRL : agendaEntry
            deactivate "AgendaEntryMapper"

            CTRL -> AgendaRepo : updateEntryDate(agendaEntry)
            activate AgendaRepo

                AgendaRepo --> CTRL : success/failure
            deactivate AgendaRepo

            CTRL --> UI : displays message of (in)success
        deactivate CTRL

        UI --> Employee : displays message of (in)success
    deactivate UI

deactivate Employee

@enduml
