@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline
'skinparam linetype orto

skinparam classAttributeIconSize 0

'left to right direction



class Collaborator {
    - String email
    - String name
    - String address
    - String phone
    - Job job
    - List<Skill> skills
    - Date birthDate
    - Date admissionDate
    - String IDtype
    - int taxpayerNumber
    - int citizenNumber
    - boolean isFree

    + Collaborator(email, name, address, phone, job, birthDate, admissionDate, IDtype, taxpayerNumber, citizenNumber, skills)
    + addSkill(skill)
    + removeSkill(skill)
}


class AssignTeamToAgendaEntryGUI {
}

class TeamRepository {
    + getTeams()
}

class Agenda {
    + add(collaborator)
    + remove(collaborator)
    + update(collaborator, name, email, address, phone, job, skills, birthDate, admissionDate, IDtype, taxpayerNumber, citizenNumber)
    + getCollaborators()
}

class Repositories {
    + getInstance()
    + getTeamRepository()
    + getCollaboratorRepository()
}

class AgendaEntry{
    entry
    startDate
    endDate
    status
    vehicles
}

class TeamController{
    + getTeams()
}

class AgendaController{
    + getTeamsFreeAtDate(startDate, endDate, teams)
    + addTeamToAgendaEntry()
}

AssignTeamToAgendaEntryGUI --> TeamController
AssignTeamToAgendaEntryGUI --> AgendaController
AgendaController --> Repositories
TeamController --> Repositories
Repositories --> TeamRepository
Repositories --> Agenda
TeamRepository --> Team: contains
Team --> Collaborator : Contains
Agenda --> AgendaEntry : Contains
AgendaEntry --> Team : Contains
@enduml